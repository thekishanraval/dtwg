{"version":3,"sources":["webpack:///./src/components/pageComponents/HeroSide.js","webpack:///./src/components/pageComponents/Hero.js","webpack:///./src/components/pageComponents/ItemSlider.js","webpack:///./src/templates/Page.js"],"names":["HeroSide","data","bgImages","backgroundImages","innerImage","heroInnerImage","overlay","colorOverlay","overlayValue","colorOverlayPercentage","gradientColor","colorOverlayValue","isH1","h1Heading","title","heading","subtext","buttons","componentHeight","sectionHeight","primaryLink","buttonLink","secondaryLink","isPrimaryInternal","isInternal","isSecondaryInternal","hasImage","h2Breakpoints","useBreakpointValue","base","md","lg","h3Breakpoints","h4Breakpoints","cardDirection","direction","w","position","overflow","h","flexDirection","alignItems","justifyContent","minHeight","minWidth","top","left","zIndex","style","objectFit","imgStyle","loading","className","image","getImage","localFile","alt","height","bgGradient","bgColor","justify","width","pt","pb","order","maxW","maxH","px","rounded","borderBottomRadius","mx","boxShadow","py","align","spacing","minH","right","mt","as","color","fontWeight","lineHeight","textAlign","fontSize","dangerouslySetInnerHTML","__html","GatsbyLink","to","href","target","bg","size","_hover","buttonLabel","variant","colorScheme","border","Hero","h1Breakpoints","background","ArrowStyles","props","onClick","_before","display","ItemSlider","imageSections","imageSection","sectionTitle","subtitle","sectionSubtext","numberOfSlides","numberOfItemsToShow","sliderType","padded","textCentered","settings","dots","infinite","speed","slidesToShow","slidesToScroll","initialSlide","swipeToSlide","nextArrow","prevArrow","slide","responsive","breakpoint","bodyBreakpoints","map","section","i","link","isLinkInternal","key","p","my","padding","marginTop","altText","mb","Home","console","log","pageComponents","wpPage","Layout","post","component","typeName","__typename","id","heroType"],"mappings":"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","file":"component---src-templates-page-js-9c329e84319da5bc5fbf.js","sourcesContent":["import React from \"react\"\nimport {\n    Stack,\n    Flex,\n    Button,\n    Text,\n    VStack,\n    useBreakpointValue,\n    Heading,\n    Box,\n  } from '@chakra-ui/react'\n  import { GatsbyImage, getImage } from \"gatsby-plugin-image\"\n  import { graphql, Link as GatsbyLink } from 'gatsby'\n  import { isInternal } from \"../../utils\"\n  \n  \n  export const fragment = graphql`\n  fragment HeroComponentSide on WpPage_Pagecomponents_PageComponents_HeroComponent {\n          colorOverlay\n          colorOverlayPercentage\n          colorOverlayValue\n          h1Heading\n          heading\n          subtext\n          sectionHeight\n          direction\n          heroType\n          fieldGroupName\n          buttons {\n            buttonIconClass\n            buttonLabel\n            buttonLink\n          }\n          backgroundImages {\n            fieldGroupName\n            image {\n              altText\n              id\n              link\n              sourceUrl\n              localFile {\n                childImageSharp {\n                  gatsbyImageData(layout: FULL_WIDTH, placeholder: BLURRED, formats: [AUTO, WEBP, AVIF])\n                }\n              }\n            }\n          }\n          heroInnerImage {\n              altText\n              id\n              link\n              sourceUrl\n              localFile {\n                childImageSharp {\n                  gatsbyImageData(layout: FULL_WIDTH, placeholder: BLURRED, formats: [AUTO, WEBP, AVIF])\n                }\n              }\n          }\n        }\n`;\n\n\n  const HeroSide = (data) => {\n    const bgImages = data.backgroundImages\n    const innerImage = data.heroInnerImage ?? false;\n    const overlay = data.colorOverlay\n    const overlayValue = data.colorOverlayPercentage\n    const overlayColor = data.colorOverlayValue\n    const gradientColor = overlayColor+overlayValue\n    const isH1 = data.h1Heading\n    const title = data.heading\n    const subtext = data.subtext\n    const buttons = data.buttons ?? false\n    const componentHeight = data.sectionHeight\n    const primaryLink = buttons ? buttons[0].buttonLink : ''\n    const secondaryLink = buttons ? buttons[1]?.buttonLink : ''\n    const isPrimaryInternal = buttons ? isInternal(primaryLink) : false\n    const isSecondaryInternal = buttons ? isInternal(secondaryLink) : false\n    const hasImage = bgImages\n    const h1Breakpoints = useBreakpointValue({ base: '3xl', md: '5xl', lg: '7xl' })\n    const h2Breakpoints = useBreakpointValue({ base: '3xl', md: '3xl', lg: '6xl' })\n    const h3Breakpoints = useBreakpointValue({ base: '3xl', md: '2xl', lg: '4xl' })\n    const h4Breakpoints = useBreakpointValue({ base: 'l', md: 'xl', lg: 'xl' })\n    const cardDirection = data.direction\n\n\n    return (\n      <Stack\n        w={'full'}\n        position=\"relative\"\n        overflow=\"hidden\"\n        h={['auto','auto',componentHeight,componentHeight]}\n        flexDirection={[\"column\",\"column\",\"row\",\"row\"]}\n        alignItems={'flex-end'}\n        justifyContent={cardDirection}>\n          {hasImage && (\n            <Box\n            minHeight={componentHeight}\n            minWidth=\"100vw\"\n            position=\"absolute\"\n            top=\"0\"\n            left=\"0\"\n            zIndex=\"-2\"\n            >\n            \n            <GatsbyImage style={{minHeight: componentHeight , objectFit: 'contain', overflow: 'visible', position: 'relative'}} imgStyle={{minHeight: componentHeight}} loading=\"eager\" className=\"hero-bg\" image={getImage(bgImages[0].image.localFile)} alt={title} />\n            </Box>\n          )}\n\n          <VStack \n            w={'full'}\n            height=\"100%\"\n            position=\"absolute\"\n            zIndex=\"-1\"\n            bgGradient={overlay ? 'linear(to-b, '+gradientColor+' , transparent)' : 'linear(to-b, transparent , transparent)'}\n            bgColor={overlay ? gradientColor : 'white'}>      \n          </VStack>\n          <Flex\n          justify={'center'}\n          width={[\"100%\",\"100%\",\"100%\",\"100%\"]}\n          pt={[\"35vh\",\"12vh\",\"0\",\"0%\"]}\n          pb={[\"20vh\",\"8vh\",\"0\",\"0%\"]}\n          height=\"100%\"\n          alignItems={'center'}\n          order={cardDirection == 'flex-start' ? [\"1\",\"1\",\"2\",\"2\"] : 1}\n          >\n            {innerImage.hasImage ?? (\n              <GatsbyImage style={{height: 'auto' , width: '50%', overflow: 'visible', position: 'relative'}}  loading=\"eager\"  image={getImage(innerImage.localFile)} alt={title} />\n            )}\n            \n          </Flex>\n        <VStack\n          width=\"100%\"\n          maxW={[\"100vw\",\"100vw\",\"50vw\",\"50vw\"]}\n          maxH=\"100%\"\n          justify={'center'}\n          px={['2','2','2','0']}\n          rounded={'md'}\n          borderBottomRadius=\"0\"\n          bgColor={[\"white\",\"white\",\"white\",\"white\"]}\n          mx={['0px !important','0px !important','0px !important','32px !important']}\n          boxShadow={'xl'}\n          order={cardDirection == 'flex-start' ? 1 : 2}\n          >\n          \n          <Stack py={[12,12,16,16]} position=\"relative\" align={'flex-start'}  spacing={4}>\n            <Box\n            width=\"100%\"\n            minH=\"100%\"\n            bgColor=\"#ffffff50\"\n            zIndex=\"-1\"\n            rounded={'md'}\n            left={cardDirection === 'flex-end' ? ['-10%','-15%','-9%','-9.5%'] : 'auto'}\n            right={cardDirection === 'flex-start' ? ['-10%','-15%','-9%','-9.5%'] : 'auto'}\n            top={['-8%','-10%','-16%','-16%']}\n            position=\"absolute\"\n            />\n            <Heading\n            px={'12'}\n            pb={'4'}\n            mt={'0px !important'}\n            as={isH1 ? 'h1' : 'h2'}\n              color={!hasImage ? 'white' : '#2f2f2f'}\n              fontWeight={900}\n              lineHeight={1.2}\n              textAlign='left'\n              fontSize={isH1 ? h2Breakpoints : h3Breakpoints}>\n              {title}\n            </Heading>\n            \n            {subtext && (\n            <Text\n              px={'12'}\n              pb={'6'}\n              mt={'0px !important'}\n              as = \"h3\"\n              color={!hasImage ? 'white' : '#2f2f2f'}\n              fontWeight={500}\n              lineHeight={1.3}\n              textAlign='left'\n              fontSize={h4Breakpoints}\n              dangerouslySetInnerHTML={{ __html: subtext }}>\n              \n            </Text>\n            )}\n            \n            {buttons[0] && \n              (\n                <Stack px={'12'} alignItems={'flex-start'} width=\"100%\" spacing={8} direction={'row'}>\n            \n            <Button\n                as={isPrimaryInternal ? GatsbyLink : \"a\"}\n                to={primaryLink}\n                href={primaryLink}\n                target={isPrimaryInternal ? \"_self\" : \"_blank\"}\n                bg={'#e55424'}\n                rounded={'xl'}\n                color={'white'}\n                size={\"lg\"}\n                _hover={{ bg: 'gray.900' }}>\n                {buttons[0].buttonLabel}\n              </Button>\n\n              {buttons[1] && (<Button\n                as={isSecondaryInternal ? GatsbyLink : \"a\"}\n                to={secondaryLink}\n                href={secondaryLink}\n                target={isSecondaryInternal ? \"_self\" : \"_blank\"}\n                rounded={'xl'}\n                variant=\"outline\"\n                colorScheme=\"orange\"\n                size={\"lg\"}\n                _hover={{ bg: 'gray.900', color: 'white', border: '1px solid' }}\n                >\n                {buttons[1].buttonLabel}\n              </Button>)}\n            </Stack>\n              ) \n              }\n            \n            \n          </Stack>\n        </VStack>\n        \n      </Stack>\n    );\n  }\n\n  export default HeroSide","import React from \"react\"\nimport {\n    Stack,\n    Flex,\n    Button,\n    Text,\n    VStack,\n    useBreakpointValue,\n    Heading,\n    Box,\n  } from '@chakra-ui/react'\n  import { GatsbyImage, getImage } from \"gatsby-plugin-image\"\n  import { graphql, Link as GatsbyLink } from 'gatsby'\n  import { isInternal } from \"../../utils\"\n  \n  \n  export const fragment = graphql`\n  fragment HeroComponent on WpPage_Pagecomponents_PageComponents_HeroComponent {\n          colorOverlay\n          colorOverlayPercentage\n          colorOverlayValue\n          h1Heading\n          heading\n          subtext\n          sectionHeight\n          fieldGroupName\n          buttons {\n            buttonIconClass\n            buttonLabel\n            buttonLink\n          }\n          backgroundImages {\n            fieldGroupName\n            image {\n              altText\n              id\n              link\n              sourceUrl\n              localFile {\n                childImageSharp {\n                  gatsbyImageData(layout: FULL_WIDTH, placeholder: BLURRED, formats: [AUTO, WEBP, AVIF])\n                }\n              }\n            }\n          }\n        }\n`;\n\n\n  const Hero = (data) => {\n    const bgImages = data.backgroundImages\n    const overlay = data.colorOverlay\n    const overlayValue = data.colorOverlayPercentage\n    const overlayColor = data.colorOverlayValue\n    const gradientColor = overlayColor+overlayValue\n    const isH1 = data.h1Heading\n    const title = data.heading\n    const subtext = data.subtext\n    const buttons = data.buttons ?? false\n    const componentHeight = data.sectionHeight\n    const primaryLink = buttons ? buttons[0].buttonLink : ''\n    const secondaryLink = buttons ? buttons[1]?.buttonLink : ''\n    const isPrimaryInternal = buttons ? isInternal(primaryLink) : false\n    const isSecondaryInternal = buttons ? isInternal(secondaryLink) : false\n    const hasImage = bgImages\n    const h1Breakpoints = useBreakpointValue({ base: '3xl', md: '5xl', lg: '7xl' })\n    const h2Breakpoints = useBreakpointValue({ base: '2xl', md: '4xl', lg: '6xl' })\n    const h3Breakpoints = useBreakpointValue({ base: 'xl', md: '2xl' })\n\n    return (\n      <Flex\n        w={'full'}\n        position=\"relative\"\n        overflow=\"hidden\"\n        h={componentHeight}>\n          {hasImage && (\n            <Box\n            minHeight=\"100vh\"\n            minWidth=\"100vw\"\n            position=\"absolute\"\n            top=\"0\"\n            left=\"0\"\n            zIndex=\"-1\"\n            >\n            \n            <GatsbyImage style={{minHeight: componentHeight , overflow: 'visible', position: 'relative'}} imgStyle={{minHeight: componentHeight}} loading=\"eager\" className=\"hero-bg\" image={getImage(bgImages[0].image.localFile)} alt={title} />\n            </Box>\n          )}\n        \n        \n        <VStack\n          w={'full'}\n          justify={'center'}\n          px={['12','12','12','0']}\n          bgGradient={overlay ? 'linear(to-t, '+gradientColor+' , transparent)' : 'linear(to-t, transparent , transparent)'}\n          bgColor={overlay ? gradientColor : 'white'}>\n          \n          <Stack maxW={'6xl'} align={'center'} px={['12','12','12','0']} spacing={4}>\n            <Heading\n            as={isH1 ? 'h1' : 'h2'}\n              color={hasImage ? 'white' : '#1a1a1a'}\n              fontWeight={700}\n              lineHeight={1.2}\n              textAlign='center'\n              fontSize={isH1 ? h1Breakpoints : h2Breakpoints}>\n              {title}\n            </Heading>\n            <Text\n              as = \"h3\"\n              color={hasImage ? 'white' : '#1a1a1a'}\n              fontWeight={700}\n              lineHeight={1.2}\n              textAlign='center'\n              fontSize={h3Breakpoints}>\n              {subtext}\n            </Text>\n            {buttons && (\n            <Stack pt={10} spacing={8} direction={'row'}>\n              <Button\n                as={isPrimaryInternal ? GatsbyLink : \"a\"}\n                to={primaryLink}\n                href={primaryLink}\n                target={isPrimaryInternal ? \"_self\" : \"_blank\"}\n                bg={'#e55424'}\n                rounded={'xl'}\n                color={'white'}\n                size=\"lg\"\n                _hover={{ bg: 'gray.900' }}>\n                {buttons[0].buttonLabel}\n              </Button>\n              {buttons[1] && (<Button\n                as={isSecondaryInternal ? GatsbyLink : \"a\"}\n                to={secondaryLink}\n                href={secondaryLink}\n                target={isSecondaryInternal ? \"_self\" : \"_blank\"}\n                rounded={'xl'}\n                variant=\"outline\"\n                color={hasImage ? 'white' : '#1a1a1a'}\n                bg={hasImage ? '' : 'white'}\n                size=\"lg\"\n                _hover={{\n                    background: 'whiteAlpha.300'\n                }}>\n                {buttons[1].buttonLabel}\n              </Button>)}\n            </Stack>\n            )}\n            \n          </Stack>\n        </VStack>\n        \n      </Flex>\n    );\n  }\n\n  export default Hero","import React from \"react\"\nimport {\n    Stack,\n    Flex,\n    Button,\n    Text,\n    VStack,\n    useBreakpointValue,\n    Heading,\n    Box,\n  } from '@chakra-ui/react'\n\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport { graphql, Link as GatsbyLink } from 'gatsby'\nimport { isInternal } from \"../../utils\"\nimport slick from \"slick-carousel/slick/slick.css\"\nimport slick_theme from \"slick-carousel/slick/slick-theme.css\"\nimport Slider from \"react-slick\"\nimport \"./css/itemSlider.css\"\n\nexport const fragment = graphql`\n  fragment ItemSlider on WpPage_Pagecomponents_PageComponents_ImageGrid {\n            numberOfItemsToShow\n            sectionSubtext\n            sectionTitle\n            fieldGroupName\n            sliderType\n            imageSection {\n              buttonLabel\n              fieldGroupName\n              link\n              subtext\n              title\n              image {\n                altText\n                localFile {\n                  childImageSharp {\n                    gatsbyImageData(layout: FULL_WIDTH, placeholder: BLURRED, formats: [AUTO, WEBP, AVIF])\n                  }\n                }\n              }\n            }\n  }\n`;\n\nconst ArrowStyles = (props) => {\n    const { className, style, onClick } = props;\n    return (\n        <Box\n          _before={{color: 'gray.800'}}\n          className={className}\n          style={{ ...style, display: \"block\" }}\n          onClick={onClick}\n        />\n      )\n}\nconst ItemSlider = ( data ) => {\n  const imageSections = data.imageSection\n  const title = data.sectionTitle;\n  const subtitle = data.sectionSubtext\n  const numberOfSlides = data.numberOfItemsToShow\n  const sliderType = data.sliderType\n  const padded = (sliderType == 'padded' || sliderType == 'paddedCentered') ? true : false\n  const textCentered = (sliderType == 'paddedCentered' || sliderType == 'nonPaddedCentered') ? true : false\n\n  const settings = {\n        dots: true,\n        infinite: false,\n        speed: 500,\n        slidesToShow: numberOfSlides,\n        slidesToScroll: numberOfSlides,\n        initialSlide: 0,\n        swipeToSlide: true,\n        nextArrow: <ArrowStyles />,\n        prevArrow: <ArrowStyles />,\n        slide: <Flex />,\n        responsive: [\n          {\n            breakpoint: 1024,\n            settings: {\n              slidesToShow: 3,\n              slidesToScroll: 3,\n              infinite: true,\n              dots: true\n            }\n          },\n          {\n            breakpoint: 768,\n            settings: {\n              slidesToShow: 2,\n              slidesToScroll: 2,\n              initialSlide: 2\n            }\n          },\n          {\n            breakpoint: 480,\n            settings: {\n              slidesToShow: 1,\n              slidesToScroll: 1\n            }\n          }\n        ]\n      }\n\n    \n    //   const h1Breakpoints = useBreakpointValue({ base: '3xl', md: '5xl', lg: '7xl' })\n    //   const h2Breakpoints = useBreakpointValue({ base: '2xl', md: '4xl', lg: '6xl' })\n    //   const h3Breakpoints = useBreakpointValue({ base: 'xl', md: '2xl', lg: '3xl' })\n    //   const h4Breakpoints = useBreakpointValue({ base: 'l', md: 'xl', lg: 'xl' })\n      const h1Breakpoints = useBreakpointValue({ base: '3xl', md: '5xl', lg: '7xl' })\n      const h2Breakpoints = useBreakpointValue({ base: '3xl', md: '3xl', lg: '6xl' })\n      const h3Breakpoints = useBreakpointValue({ base: '3xl', md: '2xl', lg: '4xl' })\n      const h4Breakpoints = useBreakpointValue({ base: 'xl', md: 'l', lg: 'l' })\n      const bodyBreakpoints = useBreakpointValue({ base: 'l', md: 'l', lg: '14px' })\n\n\n      return (\n        <Stack\n        px={'40px'}\n        py={[12,12,16,16]}\n        bgColor='gray.50'\n        textAlign=\"center\"\n        color={'gray.800'}\n        >\n          <Heading\n            as={'h2'}\n              color={'gray.800'}\n              fontWeight={900}\n              lineHeight={1.2}\n              px={'12'}\n              pb={'4'}\n              mt={'0px !important'}\n              textAlign={['left,', 'left','center','center']}\n              fontSize={h3Breakpoints}>\n              {title}\n            </Heading>\n            <Text\n              px={'12'}\n              pb={'10'}\n              mt={'0px !important'}\n              as = \"h3\"\n              color={'gray.800'}\n              fontWeight={500}\n              lineHeight={1.2}\n              textAlign={['left,', 'left','center','center']}\n              fontSize={h3Breakpoints}>\n              {subtitle}\n            </Text>\n          <Slider {...settings}>\n          { imageSections?.map( (section, i) => {\n            const link = section.link\n            const isLinkInternal = isInternal(link)\n            return(\n            <VStack className=\"test\" key={i}\n            p=\"3\"\n            height=\"100%\"\n            >\n              <Box\n              boxShadow=\"xl\"\n              rounded=\"md\"\n              bg=\"white\"\n              mx={1}\n              pb={16}\n              my={-10}\n              h=\"100%\"\n              >\n                <GatsbyImage imgStyle={{padding: padded ? '12px' : '0px', marginTop: '16%', top: '0' }}  className=\"image\" loading=\"lazy\" image={getImage(section.image.localFile)} alt={section.image.altText} />\n                <Box\n                px={6}\n                pt={6}\n                height=\"auto !important\"\n                textAlign=\"left\">\n                  <Heading\n                  as=\"h4\"\n                  mb=\"2\"\n                  textAlign={textCentered ? 'center' : 'left'}\n                  fontSize={h4Breakpoints}>{section.title}</Heading>\n                  <Text\n                  mb=\"6\"\n                  pb=\"2\"\n                  fontSize={bodyBreakpoints}\n                  textAlign={textCentered ? 'center' : 'left'}\n                  >{section.subtext}</Text>\n\n                  {link && (\n                      <Button\n                      as={isLinkInternal ? GatsbyLink : \"a\"}\n                      to={link}\n                      href={link}\n                      target={isLinkInternal ? \"_self\" : \"_blank\"}\n                      bg={'#e55424'}\n                      rounded={'xl'}\n                      color={'white'}\n                      size=\"lg\"\n                      _hover={{ bg: 'gray.800' }}>\n                      {section.buttonLabel}\n                    </Button>\n                  )}\n                  \n                </Box>\n              </Box>\n            </VStack>\n            )\n          })}\n          \n          </Slider>\n        </Stack>\n      )\n}\n\nexport default ItemSlider","import React from \"react\"\nimport Layout from \"../components/Layout\"\nimport HeroSide from \"../components/pageComponents/HeroSide\"\nimport Hero from \"../components/pageComponents/Hero\"\nimport { graphql } from 'gatsby'\nimport Seo from 'gatsby-plugin-wpgraphql-seo';\nimport PostGrid from \"../components/pageComponents/PostGrid\"\nimport ItemSlider from \"../components/pageComponents/ItemSlider\"\n\n\nexport const pageQuery = graphql`\nquery PageById($id: String) {\n  wpPage(id: {eq: $id}) {\n    id\n    title\n    uri\n    pageComponents {\n      fieldGroupName\n      pageComponents {\n        __typename\n        ...HeroComponentSide\n        ...ItemSlider\n      }\n    }\n    seo {\n        title\n        metaDesc\n        focuskw\n        metaKeywords\n        metaRobotsNoindex\n        metaRobotsNofollow\n        opengraphTitle\n        opengraphDescription\n        opengraphImage {\n            altText\n            sourceUrl\n            srcSet\n            localFile {\n                childImageSharp {\n                    gatsbyImageData(layout: FIXED, placeholder: BLURRED, formats: [AUTO, WEBP, AVIF])\n                }\n            }\n        }\n        twitterTitle\n        twitterDescription\n        twitterImage {\n            altText\n            sourceUrl\n            srcSet\n            localFile {\n                childImageSharp {\n                    fixed {\n                    src\n                    }\n                }\n            }\n        }\n        canonical\n        cornerstone\n        schema {\n            articleType\n            pageType\n            raw\n        }\n    }\n  }\n  ...PostItems\n  ...NewsItems\n  ...EventItems\n}\n`;\n\n\nconst Home = ({ data }) => {\n    console.log(data)\n  const pageComponents = data.wpPage.pageComponents?.pageComponents;\n  \n  return (\n    <Layout>\n      <Seo post={data.wpPage} />\n      <div>\n      {pageComponents?.map( (component, i) => {\n        const typeName = component.__typename\n        console.log(component);\n        const key = data.wpPage.id + typeName + i\n        switch (typeName) {\n          case 'WpPage_Pagecomponents_PageComponents_HeroComponent':\n            return (component.heroType === 'full' ? <Hero key={typeName+i} {...component}/> : <HeroSide key={key} {...component}/>)\n\n            case 'WpPage_Pagecomponents_PageComponents_ImageGrid':\n              return <ItemSlider key={typeName+i} {...component}/>\n              \n            default:\n            return <div> No Component defined in gatsby </div>\n        }\n      })}\n    </div>\n    \n    </Layout>\n  )\n}\n\nexport default Home"],"sourceRoot":""}