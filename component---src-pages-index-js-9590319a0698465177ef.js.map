{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./node_modules/@chakra-ui/react-env/dist/esm/mock-document.js","webpack:///./node_modules/@chakra-ui/react-env/dist/esm/mock-window.js","webpack:///./node_modules/@chakra-ui/react-env/dist/esm/env.js","webpack:///./node_modules/@chakra-ui/media-query/dist/esm/create-media-query.js","webpack:///./node_modules/@chakra-ui/media-query/dist/esm/use-breakpoint.js","webpack:///./node_modules/@chakra-ui/media-query/dist/esm/use-breakpoint-value.js","webpack:///./node_modules/@chakra-ui/media-query/dist/esm/media-query.utils.js","webpack:///./src/components/pageComponents/Hero.js"],"names":["Home","data","title","subText","primaryLabel","secondaryLabel","primaryLink","secondaryLink","width","background","useColorModeValue","borderBottomWidth","mt","flexDirection","textAlign","align","justify","maxW","mb","as","m","size","fontSize","pt","pb","minHeight","spacing","direction","base","sm","to","colorScheme","variant","ssrDocument","body","classList","add","remove","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","createElement","children","childNodes","style","setAttribute","getElementsByTagName","noop","mockEnv","window","document","navigator","userAgent","CustomEvent","this","getComputedStyle","getPropertyValue","matchMedia","matches","addListener","removeListener","requestAnimationFrame","callback","setTimeout","cancelAnimationFrame","id","clearTimeout","setInterval","clearInterval","defaultEnv","EnvironmentContext","createMediaQueries","breakpoints","Object","entries","sort","a","b","Number","parseInt","map","_ref","index","arr","_ref2","breakpoint","minWidth","next","maxWidth","undefined","query","toMediaString","value","modifier","replace","measurementRegex","match","parseFloat","calculateMeasurement","endsWith","subtract","createMediaQueryString","displayName","_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","keys","length","indexOf","_extends","assign","arguments","prototype","hasOwnProperty","call","apply","useBreakpoint","defaultBreakpoint","env","mediaQueries","useMemo","_React$useState","useState","mediaQuery","find","_React$useState2","currentBreakpoint","setCurrentBreakpoint","current","update","useCallback","useEffect","listeners","Set","forEach","handleChange","_ref3","clear","useBreakpointValue","values","theme","stopIndex","getClosestValue","Hero","bgImage","isPrimaryInternal","isInternal","isSecondaryInternal","image","console","log","w","h","position","top","left","zIndex","className","alt","px","bgGradient","color","fontWeight","lineHeight","md","lg","GatsbyLink","href","bg","rounded","_hover","Link"],"mappings":"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","file":"component---src-pages-index-js-9590319a0698465177ef.js","sourcesContent":["import React from \"react\"\n\nimport {\n  Box,\n  Flex,\n  Heading,\n  Text,\n  Stack,\n  Button,\n  useColorModeValue,\n} from \"@chakra-ui/react\"\nimport { Link } from \"gatsby\"\nimport Layout from \"../components/Layout\"\nimport Container from \"../components/Container\"\nimport Meta from \"../components/Meta\"\nimport Hero from \"../components/pageComponents/Hero\"\n\nconst Home = ({ data }) => {\n  return (\n    <Layout>\n      <Meta title=\"GraphQL API for WordPress\" />\n      <Hero\n      title='Hello'\n      subText='How are you'\n      primaryLabel='Wow button 1'\n      secondaryLabel=\"Learn More\"\n      primaryLink='https://shop.dovertwg.com'\n      secondaryLink='/about'\n      />\n      \n      <Box\n        width={`100%`}\n        background={useColorModeValue(`gray.50`, `gray.700`)}\n        borderBottomWidth=\"1px\"\n      >\n        <Container mt=\"0\">\n          <Flex\n            flexDirection=\"column\"\n            textAlign=\"center\"\n            align=\"center\"\n            justify=\"space-between\"\n          >\n            <Box maxW=\"900px\" mt={`10`} mb={`20`}>\n              <Heading as={`h2`} m=\"0\" mb=\"3\" size=\"2xl\">\n                Query what you need. Get exactly that.\n              </Heading>\n              <Text fontSize=\"2xl\" mt=\"10\">\n                With GraphQL, the client makes declarative queries, asking for\n                the exact data needed, and in exactly what was asked for is\n                given in response, nothing more. This allows the client have\n                control over their application, and allows the GraphQL server to\n                perform more efficiently by only fetching the resources\n                requested.\n              </Text>\n            </Box>\n          </Flex>\n          \n        </Container>\n      </Box>\n      <Box\n        width={`100%`}\n        background={useColorModeValue(`white`, `gray.600`)}\n        borderBottomWidth=\"1px\"\n      >\n        <Container mt=\"0\">\n          <Flex\n            flexDirection=\"column\"\n            textAlign=\"center\"\n            align=\"center\"\n            justify=\"space-between\"\n          >\n            <Box maxW=\"900px\" mt={`10`} mb={`20`}>\n              <Heading as={`h2`} m=\"0\" mb=\"3\" size=\"2xl\">\n                Fetch many resources in a single request.\n              </Heading>\n              <Text fontSize=\"2xl\" mt=\"10\">\n                GraphQL queries allow access to multiple root resources, and\n                also smoothly follow references between connected resources.\n                While typical a REST API would require round-trip requests to\n                many endpoints, GraphQL APIs can get all the data your app needs\n                in a single request. Apps using GraphQL can be quick even on\n                slow mobile network connections.\n              </Text>\n            </Box>\n          </Flex>\n\n          \n        </Container>\n      </Box>\n      <Box width={`100%`} background={useColorModeValue(`gray.50`, `gray.700`)}>\n        <Container mt=\"0\" pt=\"20\" pb=\"20\">\n          <Flex\n            flexDirection=\"column\"\n            textAlign=\"center\"\n            align=\"center\"\n            justify=\"space-between\"\n          >\n            <Box maxW=\"900px\" mt={`10`} mb={`20`}>\n              <Heading as={`h2`} m=\"0\" mb=\"3\" size=\"2xl\">\n                Who's Using WPGraphQL?\n              </Heading>\n              <Text fontSize=\"2xl\" mt=\"10\">\n                Digital agencies, product teams and freelancers around the world\n                trust WPGraphQL in production to bridge modern front-end stacks\n                with content managed in WordPress.\n              </Text>\n              \n            </Box>\n          </Flex>\n        </Container>\n      </Box>\n      <Box width={`100%`} background={useColorModeValue(`white`, `gray.600`)}>\n        <Container mt=\"0\">\n          <Flex\n            flexDirection=\"column\"\n            textAlign=\"center\"\n            align=\"center\"\n            justify=\"space-between\"\n          >\n            <Box maxW=\"900px\" mt={`10`} mb={`20`}>\n              <Heading as={`h2`} m=\"0\" mb=\"3\" size=\"2xl\">\n                Loved by developers, like you.\n              </Heading>\n              \n            </Box>\n          </Flex>\n        </Container>\n      </Box>\n      <Box\n        width={`100%`}\n        background={useColorModeValue(`gray.50`, `gray.700`)}\n        borderBottomWidth=\"1px\"\n      >\n        <Container mt=\"0\" mb=\"10\" minHeight={0}>\n          <Flex\n            flexDirection=\"column\"\n            textAlign=\"center\"\n            align=\"center\"\n            justify=\"space-between\"\n          >\n            <Box maxW=\"900px\" mt={`10`} mb={`10`}>\n              <Heading as={`h2`} fontSize={`5xl`}>\n                Start using WPGraphQL today!\n              </Heading>\n              <Stack\n                mt=\"10\"\n                spacing=\"0\"\n                justify=\"center\"\n                direction={{ base: \"column\", sm: \"row\" }}\n              >\n                <Link to=\"/docs/introduction\">\n                  <Button\n                    as=\"span\"\n                    colorScheme=\"blue\"\n                    variant=\"solid\"\n                    maxW={`300px`}\n                    m={`3`}\n                    mb={`5`}\n                  >\n                    Get Started\n                  </Button>\n                </Link>\n                \n              </Stack>\n            </Box>\n          </Flex>\n        </Container>\n      </Box>\n    </Layout>\n  )\n}\n\nexport default Home","var doc = {\n  body: {\n    classList: {\n      add: function add() {},\n      remove: function remove() {}\n    }\n  },\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  activeElement: {\n    blur: function blur() {},\n    nodeName: \"\"\n  },\n  querySelector: function querySelector() {\n    return null;\n  },\n  querySelectorAll: function querySelectorAll() {\n    return [];\n  },\n  getElementById: function getElementById() {\n    return null;\n  },\n  createEvent: function createEvent() {\n    return {\n      initEvent: function initEvent() {}\n    };\n  },\n  createElement: function createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute: function setAttribute() {},\n      getElementsByTagName: function getElementsByTagName() {\n        return [];\n      }\n    };\n  }\n};\nexport var ssrDocument = doc;","import { ssrDocument } from \"./mock-document\";\n\nvar noop = function noop() {};\n\nvar win = {\n  document: ssrDocument,\n  navigator: {\n    userAgent: \"\"\n  },\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener: noop,\n  removeEventListener: noop,\n  getComputedStyle: function getComputedStyle() {\n    return {\n      getPropertyValue: function getPropertyValue() {\n        return \"\";\n      }\n    };\n  },\n  matchMedia: function matchMedia() {\n    return {\n      matches: false,\n      addListener: noop,\n      removeListener: noop\n    };\n  },\n  requestAnimationFrame: function requestAnimationFrame(callback) {\n    if (typeof setTimeout === \"undefined\") {\n      callback();\n      return null;\n    }\n\n    return setTimeout(callback, 0);\n  },\n  cancelAnimationFrame: function cancelAnimationFrame(id) {\n    if (typeof setTimeout === \"undefined\") return;\n    clearTimeout(id);\n  },\n  setTimeout: function setTimeout() {\n    return 0;\n  },\n  clearTimeout: noop,\n  setInterval: function setInterval() {\n    return 0;\n  },\n  clearInterval: noop\n};\nexport var ssrWindow = win;","import _slicedToArray from \"/Users/kishan/Projects/gatsby-wp-starter/fresh/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { isBrowser, __DEV__ } from \"@chakra-ui/utils\";\nimport React, { createContext, useContext, useMemo, useState } from \"react\";\nimport { ssrDocument } from \"./mock-document\";\nimport { ssrWindow } from \"./mock-window\";\nvar mockEnv = {\n  window: ssrWindow,\n  document: ssrDocument\n};\nvar defaultEnv = isBrowser ? {\n  window: window,\n  document: document\n} : mockEnv;\nvar EnvironmentContext = /*#__PURE__*/createContext(defaultEnv);\n\nif (__DEV__) {\n  EnvironmentContext.displayName = \"EnvironmentContext\";\n}\n\nexport function useEnvironment() {\n  return useContext(EnvironmentContext);\n}\nexport function EnvironmentProvider(props) {\n  var children = props.children,\n      environmentProp = props.environment;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      node = _useState2[0],\n      setNode = _useState2[1];\n\n  var context = useMemo(function () {\n    var _ref;\n\n    var doc = node == null ? void 0 : node.ownerDocument;\n    var win = node == null ? void 0 : node.ownerDocument.defaultView;\n    var nodeEnv = doc ? {\n      document: doc,\n      window: win\n    } : undefined;\n    var env = (_ref = environmentProp != null ? environmentProp : nodeEnv) != null ? _ref : defaultEnv;\n    return env;\n  }, [node, environmentProp]);\n  var showEnvGetter = !node && !environmentProp;\n  return /*#__PURE__*/React.createElement(EnvironmentContext.Provider, {\n    value: context\n  }, children, showEnvGetter && /*#__PURE__*/React.createElement(\"span\", {\n    ref: function ref(el) {\n      if (el) setNode(el);\n    }\n  }));\n}\n\nif (__DEV__) {\n  EnvironmentProvider.displayName = \"EnvironmentProvider\";\n}","import _slicedToArray from \"/Users/kishan/Projects/gatsby-wp-starter/fresh/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { isNumber } from \"@chakra-ui/utils\";\nexport default function createMediaQueries(breakpoints) {\n  return Object.entries(breakpoints) // sort css units in ascending order to ensure media queries are generated\n  // in the correct order and reference to each other correctly aswell\n  .sort(function (a, b) {\n    return Number.parseInt(a[1], 10) > Number.parseInt(b[1], 10) ? 1 : -1;\n  }).map(function (_ref, index, arr) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        breakpoint = _ref2[0],\n        minWidth = _ref2[1]; // given a following breakpoint\n\n\n    var next = arr[index + 1]; // this breakpoint must end prior the threshold of the next\n\n    var maxWidth = next ? next[1] : undefined;\n    var query = createMediaQueryString(minWidth, maxWidth);\n    return {\n      minWidth: minWidth,\n      maxWidth: maxWidth,\n      breakpoint: breakpoint,\n      query: query\n    };\n  });\n}\n/**\n * Create a media query string from the breakpoints,\n * using a combination of `min-width` and `max-width`.\n */\n\nfunction createMediaQueryString(minWidth, maxWidth) {\n  var hasMinWidth = parseInt(minWidth, 10) >= 0;\n\n  if (!hasMinWidth && !maxWidth) {\n    return \"\";\n  }\n\n  var query = \"(min-width: \" + toMediaString(minWidth) + \")\";\n\n  if (!maxWidth) {\n    return query;\n  }\n\n  if (query) {\n    query += \" and \";\n  }\n\n  query += \"(max-width: \" + toMediaString(subtract(maxWidth)) + \")\";\n  return query;\n}\n\nvar measurementRegex = /([0-9]+\\.?[0-9]*)/;\n\nvar calculateMeasurement = function calculateMeasurement(value, modifier) {\n  if (typeof value === \"number\") {\n    return \"\" + (value + modifier);\n  }\n\n  return value.replace(measurementRegex, function (match) {\n    return \"\" + (parseFloat(match) + modifier);\n  });\n};\n/**\n * 0.01 and 0.1 are too small of a difference for `px` breakpoint values\n *\n * @see https://github.com/chakra-ui/chakra-ui/issues/2188#issuecomment-712774785\n */\n\n\nfunction subtract(value) {\n  return calculateMeasurement(value, value.endsWith(\"px\") ? -1 : -0.01);\n}\n/**\n * Convert media query value to string\n */\n\n\nfunction toMediaString(value) {\n  return isNumber(value) ? value + \"px\" : value;\n}","import _slicedToArray from \"/Users/kishan/Projects/gatsby-wp-starter/fresh/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { useEnvironment } from \"@chakra-ui/react-env\";\nimport { useTheme } from \"@chakra-ui/system\";\nimport React from \"react\";\nimport createMediaQueries from \"./create-media-query\";\n/**\n * React hook used to get the current responsive media breakpoint.\n *\n * @param defaultBreakpoint default breakpoint name\n * (in non-window environments like SSR)\n *\n * For SSR, you can use a package like [is-mobile](https://github.com/kaimallea/isMobile)\n * to get the default breakpoint value from the user-agent\n */\n\nexport function useBreakpoint(defaultBreakpoint) {\n  var _useTheme = useTheme(),\n      breakpoints = _useTheme.breakpoints;\n\n  var env = useEnvironment();\n  var mediaQueries = React.useMemo(function () {\n    return createMediaQueries(_extends({\n      base: \"0px\"\n    }, breakpoints));\n  }, [breakpoints]);\n\n  var _React$useState = React.useState(function () {\n    if (!defaultBreakpoint) {\n      return undefined;\n    }\n\n    var mediaQuery = mediaQueries.find(function (_ref) {\n      var breakpoint = _ref.breakpoint;\n      return breakpoint === defaultBreakpoint;\n    });\n\n    if (mediaQuery) {\n      var breakpoint = _objectWithoutPropertiesLoose(mediaQuery, [\"query\"]);\n\n      return breakpoint;\n    }\n\n    return undefined;\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      currentBreakpoint = _React$useState2[0],\n      setCurrentBreakpoint = _React$useState2[1];\n\n  var current = currentBreakpoint == null ? void 0 : currentBreakpoint.breakpoint;\n  var update = React.useCallback(function (query, breakpoint) {\n    if (query.matches && current !== breakpoint.breakpoint) {\n      setCurrentBreakpoint(breakpoint);\n    }\n  }, [current]);\n  React.useEffect(function () {\n    var listeners = new Set();\n    mediaQueries.forEach(function (_ref2) {\n      var query = _ref2.query,\n          breakpoint = _objectWithoutPropertiesLoose(_ref2, [\"query\"]);\n\n      var mediaQuery = env.window.matchMedia(query); // trigger an initial update to determine media query\n\n      update(mediaQuery, breakpoint);\n\n      var handleChange = function handleChange() {\n        update(mediaQuery, breakpoint);\n      }; // add media query-listener\n\n\n      mediaQuery.addListener(handleChange); // push the media query list handleChange\n      // so we can use it to remove Listener\n\n      listeners.add({\n        mediaQuery: mediaQuery,\n        handleChange: handleChange\n      });\n      return function () {\n        // clean up 1\n        mediaQuery.removeListener(handleChange);\n      };\n    });\n    return function () {\n      // clean up 2: for safety\n      listeners.forEach(function (_ref3) {\n        var mediaQuery = _ref3.mediaQuery,\n            handleChange = _ref3.handleChange;\n        mediaQuery.removeListener(handleChange);\n      });\n      listeners.clear();\n    };\n  }, [mediaQueries, breakpoints, update, env.window]);\n  return current;\n}","import _slicedToArray from \"/Users/kishan/Projects/gatsby-wp-starter/fresh/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useTheme } from \"@chakra-ui/system\";\nimport { arrayToObjectNotation, fromEntries, isArray } from \"@chakra-ui/utils\";\nimport { getClosestValue } from \"./media-query.utils\";\nimport { useBreakpoint } from \"./use-breakpoint\";\n/**\n * React hook for getting the value for the current breakpoint from the\n * provided responsive values object.\n *\n * @example\n * const width = useBreakpointValue({ base: '150px', md: '250px' })\n */\n\nexport function useBreakpointValue(values) {\n  var breakpoint = useBreakpoint();\n  var theme = useTheme();\n  if (!breakpoint) return undefined;\n  /**\n   * Get the non-number breakpoint keys from the provided breakpoints\n   */\n\n  var breakpoints = Object.keys(theme.breakpoints);\n  var obj = isArray(values) ? fromEntries(Object.entries(arrayToObjectNotation(values, breakpoints)).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n\n    return [key, value];\n  })) : values;\n  return getClosestValue(obj, breakpoint, breakpoints);\n}","import { breakpoints as defaultBreakPoints } from \"@chakra-ui/utils\";\nexport function getClosestValue(values, breakpoint, breakpoints) {\n  if (breakpoints === void 0) {\n    breakpoints = defaultBreakPoints;\n  }\n\n  var index = Object.keys(values).indexOf(breakpoint);\n\n  if (index !== -1) {\n    return values[breakpoint];\n  }\n\n  var stopIndex = breakpoints.indexOf(breakpoint);\n\n  while (stopIndex >= 0) {\n    var key = breakpoints[stopIndex];\n\n    if (values[key] != null) {\n      index = stopIndex;\n      break;\n    }\n\n    stopIndex -= 1;\n  }\n\n  if (index !== -1) {\n    var _key = breakpoints[index];\n    return values[_key];\n  }\n\n  return undefined;\n}","import React from \"react\"\nimport {\n    Stack,\n    Flex,\n    Button,\n    Text,\n    VStack,\n    useBreakpointValue,\n    Heading,\n    Box,\n  } from '@chakra-ui/react'\n  import Link from \"../overrides/Link\"\n  import { Link as GatsbyLink } from 'gatsby'\n  import { GatsbyImage } from \"gatsby-plugin-image\"\n  import { isInternal } from \"../../utils\"\n  import \"../../styles/components/hero.css\"\n  \n  \n  const Hero = ({title, primaryLink, secondaryLink, bgImage}) => {\n      const isPrimaryInternal = isInternal(primaryLink)\n      const isSecondaryInternal = isInternal(secondaryLink)\n      const image = bgImage\n      console.log('From Hero: ', image)\n    return (\n      <Flex\n        w={'full'}\n        h={['90vh','90vh','80vh']}>\n        <Box\n        minHeight=\"100vh\"\n        minWidth=\"100vw\"\n        position=\"absolute\"\n        top=\"0\"\n        left=\"0\"\n        zIndex=\"-1\"\n        >\n        \n        <GatsbyImage className=\"hero-bg\" image={image} alt={title} />\n        </Box>\n        <VStack\n          w={'full'}\n          justify={'center'}\n          px={['12','12','12','0']}\n          bgGradient={'linear(to-b, blackAlpha.700, transparent)'}>\n          <Stack maxW={'6xl'} align={'center'} px={['12','12','12','0']} spacing={4}>\n            <Heading\n            as='h1'\n              color={'white'}\n              fontWeight={700}\n              lineHeight={1.2}\n              textAlign='center'\n              fontSize={useBreakpointValue({ base: '3xl', md: '5xl', lg: '7xl' })}>\n              Experience the Power Of TWG!\n            </Heading>\n            <Text\n              color={'white'}\n              fontWeight={500}\n              lineHeight={1.2}\n              textAlign='center'\n              fontSize={useBreakpointValue({ base: 'xl', md: '2xl' })}>\n              Helping transform the way you serve your customers!\n            </Text>\n            <Stack pt={10} spacing={8} direction={'row'}>\n              <Button\n                as={isPrimaryInternal ? GatsbyLink : \"a\"}\n                to={primaryLink}\n                href={primaryLink}\n                target={isPrimaryInternal ? \"_self\" : \"_blank\"}\n                bg={'#e55424'}\n                rounded={'xl'}\n                color={'white'}\n                size=\"lg\"\n                _hover={{ bg: 'gray.900' }}>\n                Explore Products\n              </Button>\n              <Button\n                as={isSecondaryInternal ? GatsbyLink : Link}\n                to={secondaryLink}\n                href={secondaryLink}\n                target={isSecondaryInternal ? \"_self\" : \"_blank\"}\n                rounded={'xl'}\n                variant=\"outline\"\n                color={'white'}\n                size=\"lg\"\n                _hover={{\n                    background: 'whiteAlpha.300'\n                }}>\n                Learn More\n              </Button>\n            </Stack>\n          </Stack>\n        </VStack>\n      </Flex>\n    );\n  }\n\n  export default Hero"],"sourceRoot":""}